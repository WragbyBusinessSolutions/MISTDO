@model MISTDO.Web.Models.AccountViewModels.TraineeViewModel
@{
    ViewData["Title"] = "Create New Trainee";
    Layout = "_LayoutDashboard";
}

@inject UserManager<ApplicationUser> userManager;
@inject UserManager<TraineeApplicationUser> usermanager;

<div class="page-container">
    <!-- Header START -->
    @await Html.PartialAsync("_LayoutHeader");

    <!-- Theme Toggle Button END -->
    <!-- Content Wrapper START -->
    <div class="main-content">
        <div class="container-fluid">
            <div class="page-title">
                <p>
                    <a asp-action="Trainees">Back</a>
                </p>
                <h4>Complete Registration </h4>

                <script type="text/javascript">
                    function ShowPreview(input) {
                        if (input.files && input.files[0]) {
                            var ImageDir = new FileReader();
                            ImageDir.onload = function (e) {
                                $('#ImagePreview').attr('src', e.target.result);
                            }
                            ImageDir.readAsDataURL(input.files[0]);
                        }
                    }
                </script>
                <!-- Configure a few settings and attach camera -->
                <script language="JavaScript">
                    Webcam.set({
                        width: 320,
                        height: 240,
                        image_format: 'jpeg',
                        jpeg_quality: 90
                    });
                    Webcam.attach('#my_camera');
                </script>

            </div>
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-block">
                            @{
                                var user = await userManager.GetUserAsync(User);
                                var modules = ViewBag.modules as List<SelectListItem>;
                                var module = ViewBag.modulecosts as List<SelectListItem>;
                                var moduless = ViewBag.modules as List<SelectListItem>;

                                var Tcenter = ViewBag.center as List<SelectListItem>;

                                var trainee = await usermanager.GetUserAsync(User);



                            }



                            <form>
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <div class="form-group">
                                    <label asp-for="TraineeId" class="control-label"> Trainee ID</label>
                                    <input asp-for="TraineeId" class="form-control" id="TraineeId" />
                                    <span asp-validation-for="TraineeId" class="text-danger"></span>
                                </div>



                                <div class="form-group">
                                    <label>Fingerprint </label> <label style="color:crimson">( Place your thumb on the device:)</label>
                                    <div class="col-4" align="center">

                                        <span align="center">
                                            <img id="ImagePreview" src="~/templates/fprint1.bmp" alt="Take a new Passport" height="150" width="120">

                                        </span>
                                    </div>
                                </div>
                                <div class="form-group">
                                    <label>Fingerprint </label> <label style="color:crimson">( Place your Index on the device:) </label>
                                    <div class="col-4" align="center">

                                        <span align="center">
                                            <img id="ImagePreview" src="~/templates/fprint.bmp" alt="Take a new Passport" height="150" width="120">

                                        </span>
                                    </div>
                                </div>


                                <div class="form-group" align="center">


                                    <p> <input type="submit" class="btn btn-success" value="Complete" /></p>

                                </div>

                            </form>

                        </div>



                    </div>
                    @*<div>
                            <a asp-action="Index">Back to List</a>
                        </div>*@
                </div>
                @*<div class="col-md-6">
                        <div class="card">
                            <div class="card-block">
                                <form asp-action="TrainingUpload" enctype="multipart/form-data">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                    <p>       @Html.ActionLink("Click here to download Template for Bulk Upload", "DownloadFile", new { })</p>

                                    <div class="form-group">
                                        <div class="col-md-10">
                                            <p><b>Upload Bulk Training Excel File</b></p>
                                            <input type="file" name="file" multiple />
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <div class="col-md-10">
                                            <input type="submit" value="Upload" />
                                        </div>
                                    </div>


                                </form>
                            </div>
                        </div>
                    </div>*@
            </div>
        </div>
    </div>

    <!-- Content Wrapper END -->
    <!-- Footer START -->
    <footer class="content-footer">
        <div class="footer">
            <div class="copyright">
                <span>Copyright © 2018 <b class="text-dark"> Department of Petroleum Resources</b>. All rights reserved.</span>
                <span class="go-right">
                    <a href="#" class="text-gray mrg-right-15">Term &amp; Conditions</a>
                    <a href="#" class="text-gray">Privacy &amp; Policy</a>
                </span>
            </div>
        </div>
    </footer>
    <!-- Footer END -->
    <!-- Page Container END -->
</div>
</div>

<script>

    function makePayment() {
        var TraineeId = $('#TraineeId').val();
        var ModuleId = $('#ModuleId ').val();



        var ModuleCost = $('#ModuleCost option:selected').text();
        var TrainingCenterId = $('#TrainingCenterId').val();
        var firstname = $('#firstname').val();
        var lastname = $('#lastname').val();
        var TrainingStartDate = $('#TrainingStartDate').val();
        var TrainingEndDate = $('#TrainingEndDate').val();

        console.log(TraineeId);
        console.log(ModuleId);
        console.log(ModuleCost);
        console.log(TrainingCenterId);
        console.log(firstname);
        console.log(lastname);
        console.log(TrainingStartDate);
        console.log(TrainingEndDate);

        var paymentEngine = RmPaymentEngine.init({
            key: 'dGFnYWJpZWxlc2luQHdyYWdieXNvbHV0aW9ucy5jb218NDEwNDkxNzR8ZTZhMzJhYmZjMjFjYmZkYWM0ZTI3ZTkzNTU5MzUxMWM5NDlhMDM1ZGU3MjQzNzk2ODViYjdlN2E1OTc0OGZhZDJjOTEyYjk1ZWZkYTAyYWM1NTU3MmZlZDZkMmQzMTM2Njc5YWIyZmFiYTNmOGZhMjIxNmJmYjM0ZjNhODMwMGU=',
            customerId: TraineeId,
            firstName: firstname,
            lastName: lastname,
            email: ModuleId,
            amount: ModuleCost,


            onSuccess: function (response) {

                console.log('callback Successful Response', response);
                $.post('@Url.Action("TraineeAttach", "TrainerDashboard")', {

                    data: response, TraineeId: TraineeId , ModuleId: ModuleId, ModuleCost: ModuleCost,  TrainingStartDate:TrainingStartDate, TrainingEndDate:TrainingEndDate
                }, function () {
                    //
                }).done(function (returndata) {
                    if (returndata.isSuccess) {
                        window.location = returndata.redirectUrl;
                    };
                });
            },
            onError: function (response) {
                console.log('callback Error Response', response);
            },
            onClose: function (response) {
                console.log("closed");
                 $.post('@Url.Action("TraineeAttach", "TrainerDashboard")', {

                    data: response, TraineeId: TraineeId , ModuleId: ModuleId, ModuleCost: ModuleCost,  TrainingStartDate:TrainingStartDate, TrainingEndDate:TrainingEndDate
                }, function () {
                    //
                }).done(function (returndata) {
                    if (returndata.isSuccess) {
                        window.location = returndata.redirectUrl;
                    };
                });
            }
        });

        paymentEngine.showPaymentWidget();

    }

</script>


