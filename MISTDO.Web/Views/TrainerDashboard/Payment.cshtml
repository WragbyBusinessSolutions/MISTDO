@model TraineeViewModel
@{
    ViewData["Title"] = "Payment";
    Layout = "_LayoutDashboard";
}


<div class="page-container">
    <!-- Header START -->
    @await Html.PartialAsync("_LayoutHeader");

    <!-- Theme Toggle Button END -->
    <!-- Content Wrapper START -->
    <div class="main-content">
        <div class="container-fluid">
            <div class="page-title">
                <h4>Make Payment</h4>
                @{
                    var module = ViewBag.Module as Modules;
                }
                <p>
                    <a>Trainee Details</a>
                    <input type="hidden" value="@Model.FirstName" id="FirstName" />
                    <input type="hidden" value="@Model.LastName" id="LastName" />
                    <input type="hidden" value="@Model.Email" id="Email" />
                    <input type="hidden" value="@module.Cost" id="Amount" />
                    <input type="hidden" value="@Model.TraineeId" id="CustomerId" />
                    <input type="hidden" value="@module.Id" id="ModuleId" />

                </p>
            </div>
          
            <div class="row">
                <div class="col-md-6">
                    <div class="card">
                        <div class="card-block">

                            <dl class="dl-horizontal">
                                <dt>
                                    @Html.DisplayNameFor(model => model.FirstName)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.FirstName)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.LastName)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.LastName)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.Email)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.Email)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.PhoneNumber)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.PhoneNumber)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.CompanyName)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.CompanyName)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.CompanyAddress)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.CompanyAddress)
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.UserAddress)
                                </dt>
                                <dd>
                                    @Html.DisplayFor(model => model.UserAddress)
                                </dd>
                                <dt>
                                    Module Name
                                </dt>
                                <dd>
                                    @module.Name
                                </dd>
                                <dt>
                                    Module Short Code
                                </dt>
                                <dd>
                                    @module.ShortCode
                                </dd>
                                <dt>
                                    Module Cost
                                </dt>
                                <dd>
                                    @module.Cost
                                </dd>

                            </dl>
                           
                           
                            <div>
                                @*<a class="btn btn-primary" asp-action="ViewCertificate">Make Payment</a>*@
                                <form>
                                    <script src="https://remitademo.net/payment/v1/remita-pay-inline.bundle.js"></script>
                                    <button class="btn btn-primary" type="button" onclick="makePayment()"> Pay </button>
                                </form>
                            </div>

                        </div>

                    </div>

                </div>
            </div>
        </div>

        <!-- Content Wrapper END -->
        <!-- Footer START -->
        <footer class="content-footer">
            <div class="footer">
                <div class="copyright">
                    <span>Copyright © 2018 <b class="text-dark">SHE Division, The Department of Petroleum Resources</b>. All rights reserved.</span>
                    <span class="go-right">
                        <a href="#" class="text-gray mrg-right-15">Term &amp; Conditions</a>
                        <a href="#" class="text-gray">Privacy &amp; Policy</a>
                    </span>
                </div>
            </div>
        </footer>
        <!-- Footer END -->
        <!-- Page Container END -->
    </div>
</div>

<script>

    function makePayment() {
        var customerid = $('#CustomerId').val();
        var firstname = $('#FirstName').val();
        var lastname = $('#LastName').val();

        var email = $('#Email').val();
        var cost = $('#Amount').val();
        var moduleid = $('#ModuleId').val();

        console.log(customerid);
        console.log(firstname);
        console.log(lastname);
        console.log(email);
        console.log(cost);

        var paymentEngine = RmPaymentEngine.init({
            key: 'dGFnYWJpZWxlc2luQHdyYWdieXNvbHV0aW9ucy5jb218NDEwNDkxNzR8ZTZhMzJhYmZjMjFjYmZkYWM0ZTI3ZTkzNTU5MzUxMWM5NDlhMDM1ZGU3MjQzNzk2ODViYjdlN2E1OTc0OGZhZDJjOTEyYjk1ZWZkYTAyYWM1NTU3MmZlZDZkMmQzMTM2Njc5YWIyZmFiYTNmOGZhMjIxNmJmYjM0ZjNhODMwMGU=',
            customerId: customerid,
            firstName: firstname,
            lastName: lastname,
            email: email,
            amount: cost,
            onSuccess: function (response) {

                console.log('callback Successful Response', response);
                $.post('@Url.Action("PaymentCompleted", "TrainerDashboard")', {
                    data: response, traineeid: customerid, moduleid: moduleid
                }, function () {
                    // 
                }).done(function (returndata) {
                    if (returndata.isSuccess) {
                        window.location = returndata.redirectUrl;
                    };
                });
            },
            onError: function (response) {
                console.log('callback Error Response', response);
            },
            onClose: function () {
                console.log("closed");
            }
        });

        paymentEngine.showPaymentWidget();

    }

</script>

